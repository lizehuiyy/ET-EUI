syntax = "proto3";
package ET;

//ResponseType M2C_TestResponse
message C2M_TestRequest // IActorLocationRequest
{
	int32 RpcId = 90;
	string request = 1;
}

message M2C_TestResponse // IActorLocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	string response = 1;
}

//ResponseType Actor_TransferResponse
message Actor_TransferRequest // IActorLocationRequest
{
	int32 RpcId = 90;
	int32 MapIndex = 1;
}

message Actor_TransferResponse // IActorLocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType G2C_EnterMap
message C2G_EnterMap // IRequest
{
	int32 RpcId = 1;
}

message G2C_EnterMap // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	// 自己unitId
	int64 MyId = 4;
}

message MoveInfo
{
	repeated float X = 1;
	repeated float Y = 2;
	repeated float Z = 3;

	float A = 4;
	float B = 5;
	float C = 6;
	float W = 7;
	int32 TurnSpeed = 8;
}

message UnitInfo
{
	int64 UnitId = 1;
	int32 ConfigId = 2;
	int32 Type = 3;
	float X = 4;
	float Y = 5;
	float Z = 6;
	float ForwardX = 7;
	float ForwardY = 8;
	float ForwardZ = 9;
	repeated int32 Ks = 10;
	repeated int64 Vs = 11;
	MoveInfo MoveInfo = 12;
}

message M2C_CreateUnits // IActorMessage
{
	repeated UnitInfo Units = 2;
}

message M2C_CreateMyUnit // IActorMessage
{
	UnitInfo Unit = 1;
}

message M2C_StartSceneChange // IActorMessage
{
	int64 SceneInstanceId = 1;
	string SceneName = 2;	
}

message M2C_RemoveUnits // IActorMessage
{
	repeated int64 Units = 2;
}

message C2M_PathfindingResult // IActorLocationMessage
{
	int32 RpcId = 90;

	float X = 1;
	float Y = 2;
	float Z = 3;
}

message C2M_Stop // IActorLocationMessage
{
	int32 RpcId = 90;
}

message M2C_PathfindingResult // IActorMessage
{
	int64 Id = 1;

	float X = 2;
	float Y = 3;
	float Z = 4;

	repeated float Xs = 5;
	repeated float Ys = 6;
	repeated float Zs = 7;
}

message M2C_Stop // IActorMessage
{
	int32 Error = 1;

	int64 Id = 2;
	float X = 3;
	float Y = 4;
	float Z = 5;

	float A = 6;
	float B = 7;
	float C = 8;
	float W = 9;
}

//ResponseType G2C_Ping
message C2G_Ping // IRequest
{
	int32 RpcId = 90;
}

message G2C_Ping // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	int64 Time = 1;
}


message G2C_Test // IMessage
{
}

//ResponseType M2C_Reload
message C2M_Reload // IRequest
{
	int32 RpcId = 90;
	string Account = 1;
	string Password = 2;
}

message M2C_Reload // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

//ResponseType R2C_Login
message C2R_Login // IRequest
{
	int32 RpcId = 90;
	string  Account = 1;  // 帐号
	string  Password = 2;  // 密码
}

message R2C_Login // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	string Address = 1;
	int64 Key = 2;
	int64 GateId = 3;
}

//ResponseType G2C_LoginGate
message C2G_LoginGate // IRequest
{
	int32 RpcId = 90;
	int64 Key = 1;  // 帐号
	int64 GateId = 2;
}

message G2C_LoginGate // IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int64 PlayerId = 1;
}

message G2C_TestHotfixMessage // IMessage
{
	string Info = 1;
}

//ResponseType M2C_TestRobotCase
message C2M_TestRobotCase // IActorLocationRequest
{
	int32 RpcId = 90;
	int32 N = 1;
}

message M2C_TestRobotCase // IActorLocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int32 N = 1;
}

//ResponseType M2C_TransferMap
message C2M_TransferMap // IActorLocationRequest
{
	int32 RpcId = 1;
}

message M2C_TransferMap // IActorLocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}


//ResponseType A2C_LoginAccount
message C2A_LoginAccount //IRequest
{
	int32 RpcId = 90;
	string AccountName = 1;
	string Password = 2;
}

message A2C_LoginAccount //IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	string Token = 1;
	int64 AccountId = 2;
}

message A2C_Disconnect //IMessage
{
	int32 Error = 1;

}

message ServerInfoProto
{
	int32 Id = 1;
	int32 Status = 2;
	string ServerName = 3;
}

//ResponseType A2C_GetServerInfo
message C2A_GetServerInfo //IRequest
{
	int32 RpcId = 90;
	string Token = 1;
	int64 AccountId = 2;
}

message A2C_GetServerInfo //IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	repeated ServerInfoProto ServerInfoList = 1;

}


message RoleInfoProto
{
	int64 Id = 1;
	string Name = 2;
	int32 State = 3;
	int64 AccountId = 4;
	int64 LastLoginTime = 5;
	int64 CreateTime = 6;
	int32 ServerId = 7;
	int64 Coin = 8;       
	int64 Gem = 9;        
	int32 Level = 10;      
	int32 Exp = 11;        
	int32 WinMatch = 12;   
	int32 LoseMatch = 13;  
	int32 MMR = 14;        

}

//ResponseType A2C_CreateRole
message C2A_CreateRole //IRequest
{
	int32 RpcId = 90;
	string Token = 1;
	int64 AccountId = 2;
	string Name = 3;
	int32 ServerId = 4;
}

message A2C_CreateRole //IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	RoleInfoProto RoleInfo = 1;
}


//ResponseType A2C_GetRole
message C2A_GetRole //IRequest
{
	int32 RpcId = 90;
	string Token = 1;
	int64 AccountId = 2;
	int32 ServerId = 4;

}

message A2C_GetRole //IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	repeated RoleInfoProto RoleInfo = 1;
}


//ResponseType A2C_DeleteRole
message C2A_DeleteRole //IRequest
{
	int32 RpcId = 90;
	string Token = 1;
	int64 AccountId = 2;
	int64 RoleInfoId = 3;
	int32 ServerId = 4;
}

message A2C_DeleteRole //IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	int64 DeleteRoleInfoId = 1;
}



//ResponseType A2C_GetRealmKey
message C2A_GetRealmKey //IRequest
{
	int32 RpcId = 90;
	string Token = 1;
	int32 ServerId = 2;
	int64 AccountId = 3;
}

message A2C_GetRealmKey //IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	string RealmKey = 1;
	string RealmAddress = 2;
}

//ResponseType R2C_LoginRealm
message C2R_LoginRealm //IRequest
{
	int32 RpcId = 90;
	int64 AccountId = 1;
	string RealmTokenKey = 2;
}

message R2C_LoginRealm //IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	string GateSessionKey = 1;
	string GateAddress = 2;
}


//ResponseType G2C_LoginGameGate
message C2G_LoginGameGate //IRequest
{
	int32 RpcId = 90;
	string Key = 1;
	int64 RoleId = 2;
	int64 AccountId = 3;
}

message G2C_LoginGameGate //IResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	
	int64 PlayerId = 1;

}

//ResponseType G2C_LoginGameGate
message C2G_EnterGame //IRequest
{
	int32 RpcId = 1;
}

message G2C_EnterGame //IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	
	int64 MyId = 4;

}

message M2C_NoticeUnitNumeric //IActorMessage
{
	int64 UnitId = 1;
	int32 NumericType = 2;
	int64 NewValue = 4;


}



//ResponseType M2C_TestUnitNumeric 
message C2M_TestUnitNumeric //IActorLocationRequest
{
	int32 RpcId = 1;
}

message M2C_TestUnitNumeric //IActorLocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	

}


//ResponseType M2C_TestBtnAddCoin
message C2M_TestBtnAddCoin //IActorLocationRequest
{
	int32 RpcId = 1;
	int32 CoinNum = 2;

}

message M2C_TestBtnAddCoin //IActorLocationResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

}


//ResponseType Chat2C_SendChatInfo
message C2Chat_SendChatInfo //IActorChatInfoRequest
{
	int32 RpcId = 1;
	string ChatMessage = 2;
}

message Chat2C_SendChatInfo //IActorChatInfoResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message Chat2C_NoticeChatInfo //IActorMessage
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	string Name = 1;
	string ChatMessage = 2;

}


message RankInfoProto
{
	int64 ID = 1;
	int64 UnitId = 2;
	string Name = 3;
	int32 MMR = 4;

}

//ResponseType Rank2C_GetRankInfo
message C2Rank_GetRankInfo //IActorRankInfoRequest
{
	int32 RpcId = 1;
}

message Rank2C_GetRankInfo //IActorRankInfoResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
	repeated RankInfoProto RankInfoProtoList = 1;
}

//ResponseType Match2C_StartMatch
message C2Match_StartMatch //IActorMatchRequest
{
	int32 RpcId = 1;
}

message Match2C_StartMatch //IActorMatchResponse
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;
}

message MatchProto
{
	int64 ID = 1;
	int64 UnitId = 2;
	string Name = 3;
	int32 MMR = 4;
}

message Match2C_StartMatchSuccess //IActorMessage
{
	int32 RpcId = 90;
	int32 Error = 91;
	string Message = 92;

	int64 UnitId1 = 1;
	string Name1 = 2;
	int32 MMR1 = 3;
	int64 UnitId2 = 4;
	string Name2 = 5;
	int32 MMR2 = 6;
	
}